{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "a4babcb7",
   "metadata": {},
   "outputs": [],
   "source": [
    "for z in range(11):\n",
    "    print(z)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "ffb2a4f5",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "1b5cc263",
   "metadata": {},
   "outputs": [],
   "source": [
    "for z in range(18):\n",
    "    if z%2 !=0:\n",
    "        print(z)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "3d452a33",
   "metadata": {},
   "outputs": [],
   "source": [
    "for x in range(15):\n",
    "    if x%2 !=0:\n",
    "        print(x)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "8b648d1b",
   "metadata": {},
   "outputs": [],
   "source": [
    "i=2   # starting\n",
    "while i<8:  #stop up to\n",
    "    print(i)\n",
    "    i+=1   # increment\n",
    "\n",
    "\n",
    "#indexing variable = i"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "a12a7b4a",
   "metadata": {},
   "outputs": [],
   "source": [
    "i=1\n",
    "while i<10:\n",
    "    print(i)\n",
    "    if i==7:\n",
    "        break\n",
    "    i +=2    \n",
    "        "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "9a7ce20f",
   "metadata": {},
   "outputs": [],
   "source": [
    "i=8\n",
    "while i <12:\n",
    "    i+=1\n",
    "    if 1==3\n",
    "    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "e7480ca4",
   "metadata": {},
   "outputs": [],
   "source": [
    "i=2\n",
    "while i<9:\n",
    "    print(i)\n",
    "    i+=1\n",
    "else:\n",
    "    print(\"i is no longer less than 6\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "02a41b85",
   "metadata": {},
   "outputs": [],
   "source": [
    "for i in range(2,14,2):\n",
    "    print(i)\n",
    "    if i==9:\n",
    "        break\n",
    "    print(i)\n",
    "  \n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "6ef5124d",
   "metadata": {},
   "outputs": [],
   "source": [
    "for i in \"satelite\":\n",
    "    if i==\"l\":\n",
    "        break\n",
    "    print(i)\n",
    "\n",
    "       "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "6432f383",
   "metadata": {},
   "outputs": [],
   "source": [
    "for x in range(6):\n",
    "    if x == 3: break\n",
    "    print(x)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "8e06d635",
   "metadata": {},
   "outputs": [],
   "source": [
    "def my_funk():\n",
    "    print(\"hello world!\")\n",
    "    \n",
    "my_funk() \n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "266cb6c7",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "email ent\n",
      "cmail ent\n",
      "gmail ent\n"
     ]
    }
   ],
   "source": [
    "def my_function(refuse):\n",
    "    print(refuse +\" ent\")\n",
    "my_function(\"email\") \n",
    "my_function(\"cmail\") \n",
    "my_function(\"gmail\") \n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "2779f498",
   "metadata": {},
   "outputs": [
    {
     "ename": "TypeError",
     "evalue": "my_function() missing 1 required positional argument: 'lname'",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mTypeError\u001b[0m                                 Traceback (most recent call last)",
      "Input \u001b[1;32mIn [3]\u001b[0m, in \u001b[0;36m<cell line: 3>\u001b[1;34m()\u001b[0m\n\u001b[0;32m      1\u001b[0m \u001b[38;5;28;01mdef\u001b[39;00m \u001b[38;5;21mmy_function\u001b[39m(fname,lname):\n\u001b[0;32m      2\u001b[0m     \u001b[38;5;28mprint\u001b[39m(fname \u001b[38;5;241m+\u001b[39m\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124m\"\u001b[39m\u001b[38;5;241m+\u001b[39m lname)\n\u001b[1;32m----> 3\u001b[0m \u001b[43mmy_function\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[38;5;124;43memail\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[43m)\u001b[49m\n",
      "\u001b[1;31mTypeError\u001b[0m: my_function() missing 1 required positional argument: 'lname'"
     ]
    }
   ],
   "source": [
    "def my_function(fname,lname):\n",
    "    print(fname +\"\"+ lname)\n",
    "my_function(\"email\")    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "4e286d3f",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "the youngest child is email\n"
     ]
    }
   ],
   "source": [
    "def my_funk(*kids):\n",
    "    print(\"the youngest child is \"+kids[0])\n",
    "    \n",
    "my_funk(\"email\",\"tobis\",\"linus\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "a891b35f",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "the older child is y\n"
     ]
    }
   ],
   "source": [
    "def funk(*kids):\n",
    "    print(\"the older child is \"+kids[2])\n",
    "    \n",
    "funk(\"r\",\"t\",\"y\",\"i\")    \n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "452bb02e",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "the youngest child is yy\n"
     ]
    }
   ],
   "source": [
    "def funk(c2,c4,c6):\n",
    "    print(\"the youngest child is \"+c4)\n",
    "\n",
    "funk(c2=\"rr\",c6=\"tt\",c4=\"yy\")    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "a01f9a59",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "His last name is Refsnes\n"
     ]
    }
   ],
   "source": [
    "def my_function(**kid):\n",
    "  print(\"His last name is \" + kid[\"lname\"])\n",
    "\n",
    "my_function(fname = \"Tobias\", lname = \"Refsnes\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "dc80678a",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "i am from sweaden\n",
      "i am from india\n",
      "i am from norway\n",
      "i am from brazil\n"
     ]
    }
   ],
   "source": [
    "def funk(country=\"norway\"):\n",
    "    print(\"i am from \"+country)\n",
    "    \n",
    "funk(\"sweaden\")\n",
    "funk(\"india\")\n",
    "funk()\n",
    "funk(\"brazil\")\n",
    "    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "13c746f9",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "i want to travel norway\n",
      "i want to travel A\n",
      "i want to travel B\n",
      "i want to travel C\n"
     ]
    }
   ],
   "source": [
    "def my_funk(country=\"norway\"):\n",
    "    print(\"i want to travel \"+country)\n",
    "my_funk() \n",
    "my_funk(\"A\")\n",
    "my_funk(\"B\")\n",
    "my_funk(\"C\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "76e545b5",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "apple\n",
      "Banana\n",
      "Crrot\n"
     ]
    }
   ],
   "source": [
    "def funk(food):\n",
    "    for x in food:\n",
    "        print(x)\n",
    "fruits=[\"apple\",\"Banana\",\"Crrot\"]        \n",
    "funk(fruits)        "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "288f62f9",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "apple\n",
      "ban\n",
      "can\n"
     ]
    }
   ],
   "source": [
    "def funk(food):\n",
    "    for x in food:\n",
    "        print(x)\n",
    "fruits=[\"apple\",\"ban\",\"can\"]\n",
    "funk(fruits)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "911728ad",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "15\n",
      "25\n"
     ]
    }
   ],
   "source": [
    "def funk(x):\n",
    "    return 5*x\n",
    "\n",
    "print(funk(3))\n",
    "print(funk(5))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "id": "a32c5f77",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "15\n"
     ]
    }
   ],
   "source": [
    "def funk(x):\n",
    "    return 3*x\n",
    "\n",
    "print(funk(5))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "id": "d82b7029",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "18\n",
      "24\n"
     ]
    }
   ],
   "source": [
    "def my_function(x):\n",
    "    return 5 * x\n",
    "\n",
    "print(funk(6))\n",
    "print(funk(8))\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "id": "5a16b5b9",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "hello\n"
     ]
    }
   ],
   "source": [
    "def my_funk():\n",
    "    print(\"hello\")\n",
    "my_funk()    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "id": "f05a843e",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "7\n",
      "13\n",
      "11\n"
     ]
    }
   ],
   "source": [
    "def my_funk(x):\n",
    "    print(x+4)\n",
    "my_funk(3)\n",
    "my_funk(9)\n",
    "my_funk(7)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "id": "bf624ed1",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "w type\n"
     ]
    }
   ],
   "source": [
    "def funk(fname):\n",
    "    print(fname + \" type\")\n",
    "funk(\"w\")\n",
    "funk"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "id": "9c7c8b71",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Emil Refsnes\n",
      "Gmil efsnes\n"
     ]
    }
   ],
   "source": [
    "def my_function(fname, lname):\n",
    "  print(fname + \" \" + lname)\n",
    "\n",
    "my_function(\"Emil\", \"Refsnes\")\n",
    "my_function(\"Gmil\", \"efsnes\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "id": "a6670221",
   "metadata": {},
   "outputs": [
    {
     "ename": "TypeError",
     "evalue": "my_function() missing 1 required positional argument: 'lname'",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mTypeError\u001b[0m                                 Traceback (most recent call last)",
      "Input \u001b[1;32mIn [47]\u001b[0m, in \u001b[0;36m<cell line: 4>\u001b[1;34m()\u001b[0m\n\u001b[0;32m      1\u001b[0m \u001b[38;5;28;01mdef\u001b[39;00m \u001b[38;5;21mmy_function\u001b[39m(fname, lname):\n\u001b[0;32m      2\u001b[0m   \u001b[38;5;28mprint\u001b[39m(fname \u001b[38;5;241m+\u001b[39m \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124m \u001b[39m\u001b[38;5;124m\"\u001b[39m \u001b[38;5;241m+\u001b[39m lname)\n\u001b[1;32m----> 4\u001b[0m \u001b[43mmy_function\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[38;5;124;43mEmil\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[43m)\u001b[49m\n",
      "\u001b[1;31mTypeError\u001b[0m: my_function() missing 1 required positional argument: 'lname'"
     ]
    }
   ],
   "source": [
    "def my_function(fname, lname):\n",
    "  print(fname + \" \" + lname)\n",
    "\n",
    "my_function(\"Emil\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "333fc7d4",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "c3bf9b26",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "4cce79da",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.6"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
